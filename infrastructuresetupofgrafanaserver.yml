---
- name: Initial Server Setup and Install Docker and Docker-Compose
  hosts: yeni_ubuntu_grafana_server
  become: true
  vars_files:
    - vars/default.yml
    - vars/secrets.yml
  
  tasks:
    - name: Install Prerequisites
      apt: name=aptitude update_cache=yes state=latest force_apt_get=yes

# Sudo Group Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

# User + Key Setup
    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ create_user }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin prohibit-password'

# Install Packages
    - name: Update apt
      apt: update_cache=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

# UFW Setup
    - name: UFW - Allow SSH connections
      ufw:
        rule: allow
        name: OpenSSH

    - name: UFW - Deny all other incoming traffic by default
      ufw:
        state: enabled
        policy: deny
        direction: incoming    
  
    - name: Add Docker's official GPG key
      shell: "{{ item }}"
      with_items:
        - amazon-linux-extras install docker -y
        - systemctl start docker
        - systemctl enable docker
        - usermod -a -G docker ec2-user
        - newgrp docker
        - curl -L "https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        - chmod +x /usr/local/bin/docker-compose


#    - name: Add Docker's apt repository
#      apt_repository:
#        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
#        state: present

    - name: Update and upgrade apt packages
      apt:
        upgrade: dist
        update_cache: yes
        cache_valid_time: 86400

#    - name: Install Docker package
#      apt:
#        name: docker-ce
#        state: present

#    - name: Enable Docker service
#      service:
#        name: docker
#        enabled: yes
#        state: started
  
    - name: install apt dependencies
      become: true
      apt:
        update_cache: yes
        state: latest
        name: python3-pip

#    - name: install pip dependencies
#      pip:
#        name: ["docker", "docker-compose"]
      
#    - name: Install docker-compose
#      get_url: 
#        url : https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
#        dest: /usr/local/bin/docker-compose
#        mode: '+x'

    - name: Reboot a slow machine that might have lots of updates to apply
      reboot:
        reboot_timeout: 3600

    - name: pull the latest version grafana image to configure grafana container server
      become: true
      command: "{{ item }}"
      with_items:
        - docker pull grafana/grafana
    
    - name: Download the Docker Compose File from the Private GitRepo
      become: yes
      git:
        repo: 'https://{{gituser}}:{{gitpass}}@github.com/alisorkuncuk/update-a-grafana-server-ansible-git-dockercompose.git'
        dest: /home/ec2-user/apt/docker-compose

    - name: Run docker-compose up
      become: true
      docker_compose:
        project_src: home/ec2-user/apt/docker-compose/
        state: present
      register: __docker_compose

    - name: debug
      debug: 
        var: __docker_compose

##          